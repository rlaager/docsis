version 0.9.9 /proposal/:
	* Feature: Allowing use MIB-MODULE-NAME:: MODULE-NAME-SPACE:: et cetera in SnmpMibObject TLV which i strongly recommend
		that resolve problems with mibs name colision, for example: PacketCable/EuroPacketCable, Motorola/Compal enterprise mibs.
		you can use "-f" switch to include MIB-MODULE-NAME:: prefixes in config dump
	* Feature: Allowing use C-style inline comments "//"
	* Feature: Allow use custom mib for packetcable hash signing becasuse "-eu" / EuroPacketCable and "-na" PacketCable are not enough
		use "-H [MIB]" switch to set custom hash mib.
	* Attempt to cleanup option parsing mess. Now option parsing is getopt based. However due to preserving option compatibility it is create another mess. Just slighty lesser, i think.

version 0.9.8 (??/??/????):
	* Massive improvements by Adrian Simionov

version 0.9.7 (10/18/2012):
	* Properly check for net-snmp headers (#3388921)
	* exit(2) on parse failures (Bradley Baetz - #3015411)
	* Support typed GenericTLVs (Bradley Baetz - #1115132)
	* Fix compilation issues on MacOS X (#3382125, #3497516)
	* Support IPv6 (Benedikt Schirrmeister)
	* Switch to dpkg's md5.c to eliminate the advertising clause
	  (#3495093)
	* Write errors to stderr
	* Allow - as a filename to mean stdin/stdout
	* Accept -o with -d to disable OID decoding
	  (Benedikt Schirrmeister - #3310695)

version 0.9.6 (06/14/2010):
	* Fix compiling on systems where -lm is required (Oliver Hitz)
	* Support newer versions of GNU m4
	* Avoid padding already aligned files (reported by David Tang)
	* Allow \" in string values ("reticent")
	* Allow @ in OID labels
	* Update MIBs & add MIBs
	* Work properly on 64-bit systems (Oliver Hitz, James Flemer)
	* Various cleanups to the code, documentation, and build setup

0.9.5			- allow semi-colon characters in strings
ctrl			- add support for TimeTicks SNMP encoding.
			- simplify and improve parser (it now returns a
		          "parse tree")
			- add support for ManufacturerCVC and CoSignerCVC
			  (reading files directly)
			- print warning if TLV64 present in DOCSIS config files
			- multiple file encoding in one pass (preliminary)
			  Performance: up to 200 files / second
			- Support Gauge32 and Counter32. Unsigned32 gets
			  encoded as a Gauge32 as well.

0.9.4			- fix parsing of square brackets in string OID labels
evvolve			- close the file descriptor in parse_config_file
ctrl			- re-work of decoding infrastructure for CableHome

0.9.3			- update CMTS MIC calculation per DOCSIS 2.0 (added
evvolve			  SubMgmt settings to CMTS MIC calculation)
ctrl			- fix decoding of long Strings in SNMP Objects
ctrl			- add support for long Variable Bindings (>127)
ctrl			- add support for TLV64 encode/decode for long SNMP
ctrl			  Objects.
evvolve			- add support for Downstream Channel List TLVs
evvolve			- add support for TftpModemAddress and TftpTimeout TLVs
ctrl			- make GenericTLVs easier to decode/encode when
ctrl			  printable strings are used
ctrl
ctrl			- fixed memory leaks (for the sake of it)


0.9.2			- add support for ObjectID variable bindings
evvolve			- fix bug when writing files on Win32
			- fix the docsis_code for subscriber management filters


0.9.1			- add support for ModemCapabilities
evvolve			- add support for Subscriber Management Filter groups
			- make SNMP VarBind encoding more "compatible" with
			  other encoders
			- cleanup argument handling, fix bug with error printing
			- fix bug where SnmpMibObject OID output would switch to
			  numeric format after a decode_oid
			- re-organized and beautified source code


0.9.0			- fix range of MaxCPE (1-254)
evvolve			- add support for Win32 with Cygwin
			- fix ReAuthTimeout upper limit (30)
			- add script to generate HTML help from
			  the symbol table
			- add NSIS packaging script for Win32
			- added configure script, re-organized stuff
			- minor source code clean-ups

0.8.8  02/07/03		- fix handling of label-hinted suffix to OIDs
evvolve			- check for string length overflow while parsing
			- added mibs to distribution
			- change SNMPv3* labels to SNMP*
			- add Docsis20Enable configuration setting
			- complete support for SnmpV3NotificationReceiver

Many thanks to Rudy Zijlstra for pointing out a few bugs.

0.8.7  20/6/03		- fix bug with encoding HexStrings with trailing zeros
Ronald Rosenfeld	- fix double declaration of symbol T_MAC
			- add support for negative integers
evvolve			- change -lcrypto to -lcrypt to make default
			  more "mainstream".
			- add support for ASN_GAUGE encodings
			- fix VendorSpecific decoding
			- print label as comment for enums

Many thanks to Ronald Rosenfeld for sending in three patches.

0.8.6  31/05/03		- add support for SNMPv3Kickstart and
evvolve		  	  partial support for SNMPv3 Notification Receiver
			- fix compilation warnings
			- add support for PHS Rule (untested)
			- cleanup indexes in docsis_symtable.h
			- add regression test script

0.8.4  10/05/03		- fixed SNMP handling ... hopefully for the last time :)
evvolve			- fixed Solaris support
ctrl			- added support for VendorSpecific TLVs


0.8.2  30/01/03		- Integrated fixes from Adrian Kwong and Cornel.
evvolve			- Updated OID format to accept "-" and "_" in labels
ctrl			- We can now encode decoded files directly !
akwong			  (thanks to help from Adrian Kwong)
			- MIB output format changed.
			- NET-SNMP 5.x support.
			- Dropped support for ucd-snmp.
			- Made SNMP decoding smarter - i.e. output OID
			  suffix only; but switch to full-OID output
			  if MIBs are not installed.
			- Hacked support for encoding MTA configuration files.
			- Added support for Vendor Specific info.
			- Worked around string formatting issues in NET-SNMP.
			- Added indent functionality.
evvolve
0.7.4  18/02/02		Fix condition too strong in docsis_decode.c.
evvolve

0.7.3  16/02/02		Change symbols so that {symbol_name,docsis_code} is
evvolve			"primary key" (the above pairs are unique in the
			entire symbol table).
			Fix errors with IpTos encoding (still buggy)
			We took over full maintainership from Cornel.

0.7.2  12/02/02		Fix typos in docsis_symtable.h
evvolve

0.7.1  08/02/02		Split encoding functions into docsis_encode.{h,c}
evvolve			Implemented Hex String and Ether+Ethermask encoders.
			Implemented range checking for string and hex string
			encoders.
			We added many DOCSIS 1.1 configuration settings to
 			docsis_symtable.h. Got bored, so if you want more please
			add them yourself and send us a patch.
			Updated CMTS MIC calculation to use the new 1.1 config
			settings in addition to the 1.0 ones (as per the
			latest DOCSIS RFI).

0.7.0  06/02/02		New "decoding" framework similar to the encoding
evvolve			framework makes adding new "symbols" as easy as
 			editing the "docsis_symtable.h" file.
			As an example, support for the DOCSIS 1.1 Downstream
			Packet Classifiers was added.
			Bugs were found and some were even fixed in the
			process.
			Started adding 1.1 stuff to the project.

0.6.2: 18/07/01
ctrl			Make the thing compile on Solaris (Makefile.solaris)
			Fix memory alignment errors on Solaris
			Updated MD5 implementation to get rid of annoying
			warnings

0.6.1:  25/03/01
ctrl			added -lcrypto to $LIBS to work with ucd-snmp-4.2
			cleaned up the sourcecode a bit
			added support for "decoding" a binary file
			fixed bug in decoding unsigned shorts (MaxBurstUp)


0.6.0:	23/03/01
ctrl			added support for generic hexadecimal strings
			(needed for docsDevNmAccessInterfaces)

			fixed bug involving multiple String-type SNMP vars
			in the same config file (uninitialized buffer)

			fixed bug with CpeMacAddress decoding (introduced in
			0.5.8)

0.5.8:
ctrl	18/03/01:	various re-organizations
			released to sourceforge

0.5.7:
ctrl	17/03/01:
			fixed bug in CPE MAC Address encoding (correct
			type = 14)
			added "support" for config files in DOS-format text

0.5.5:
ctrl
	01/12/00: 	created CHANGES file
		 	various small annoyances resolved
	  		added support for CPE MAC Address configuration setting
			removed references to _A*_H in *.h
